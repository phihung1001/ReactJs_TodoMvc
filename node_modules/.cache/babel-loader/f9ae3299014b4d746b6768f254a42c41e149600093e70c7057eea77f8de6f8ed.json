{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORKSPACE\\\\React\\\\projectw3\\\\src\\\\Context\\\\Theme-Provider.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const themes = {\n  themeLight: {\n    color: \"black\",\n    background: \"white\"\n  },\n  themeDark: {\n    color: \"white\",\n    background: \"black\"\n  }\n};\nexport const ThemeContext = /*#__PURE__*/React.createContext({\n  theme: themes.light,\n  changeTheme: () => null\n});\nconst ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState(themes.themeLight);\n  const changeTheme = () => {\n    setTheme(prevTheme => prevTheme === themes.themeDark ? themes.themeLight : themes.themeDark);\n  };\n  useEffect(() => {\n    document.body.style.setProperty('background-color', theme.background, 'important');\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      changeTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n_s(ThemeProvider, \"MiTYHmTz9DNmTQ1jnL32CIdZKig=\");\n_c = ThemeProvider;\nexport default ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","themes","themeLight","color","background","themeDark","ThemeContext","createContext","theme","light","changeTheme","ThemeProvider","children","_s","setTheme","prevTheme","document","body","style","setProperty","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/WORKSPACE/React/projectw3/src/Context/Theme-Provider.js"],"sourcesContent":["import React, { useState , useEffect  } from \"react\";\nexport const themes = {\n  themeLight: {\n    color: \"black\",\n    background: \"white\",\n  }, themeDark: {\n    color: \"white\",\n    background: \"black\",\n  }\n};\n\nexport const ThemeContext = React.createContext({\n  theme: themes.light,\n  changeTheme: () => null,\n});\n\nconst ThemeProvider =({children}) => {\n  const [theme, setTheme] = useState(themes.themeLight);\n\n  const changeTheme = () => {\n    setTheme(prevTheme => prevTheme === themes.themeDark ? themes.themeLight : themes.themeDark);\n  };\n\n  useEffect(() => {\n    document.body.style.setProperty('background-color', theme.background, 'important');\n  }, [theme]);\n\n    return (\n      <ThemeContext.Provider value={{ theme, changeTheme}}>\n           {children}\n      </ThemeContext.Provider>\n    );\n}\nexport default ThemeProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,QAAS,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrD,OAAO,MAAMC,MAAM,GAAG;EACpBC,UAAU,EAAE;IACVC,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE;EACd,CAAC;EAAEC,SAAS,EAAE;IACZF,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE;EACd;AACF,CAAC;AAED,OAAO,MAAME,YAAY,gBAAGV,KAAK,CAACW,aAAa,CAAC;EAC9CC,KAAK,EAAEP,MAAM,CAACQ,KAAK;EACnBC,WAAW,EAAEA,CAAA,KAAM;AACrB,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAEA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACL,KAAK,EAAEM,QAAQ,CAAC,GAAGjB,QAAQ,CAACI,MAAM,CAACC,UAAU,CAAC;EAErD,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBI,QAAQ,CAACC,SAAS,IAAIA,SAAS,KAAKd,MAAM,CAACI,SAAS,GAAGJ,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACI,SAAS,CAAC;EAC9F,CAAC;EAEDP,SAAS,CAAC,MAAM;IACdkB,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,kBAAkB,EAAEX,KAAK,CAACJ,UAAU,EAAE,WAAW,CAAC;EACpF,CAAC,EAAE,CAACI,KAAK,CAAC,CAAC;EAET,oBACER,OAAA,CAACM,YAAY,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEb,KAAK;MAAEE;IAAW,CAAE;IAAAE,QAAA,EAC9CA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE9B,CAAC;AAAAZ,EAAA,CAhBKF,aAAa;AAAAe,EAAA,GAAbf,aAAa;AAiBnB,eAAeA,aAAa;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}