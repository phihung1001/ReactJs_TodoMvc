{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORKSPACE\\\\React\\\\projectw3\\\\src\\\\Components\\\\content\\\\TodoList.jsx\",\n  _s = $RefreshSig$();\nimport './TodoList.css';\nimport React, { useState } from \"react\";\nimport { useContext } from 'react';\nimport { ThemeContext } from '../../Context/Theme-Provider';\nimport Todo from '../todo/Todo';\nimport ScrollFunc from '../Hoc/ScrollHoc';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const todo = useSelector(state => state.listTodo.todoList);\n  const dispatch = useDispatch();\n  const recordsPerPage = 5;\n  const [currentPage, setCurrentPage] = useState(1);\n  const lastIndex = currentPage * recordsPerPage;\n  console.log('lastIndex', lastIndex);\n  const newList = todo.slice(0, lastIndex);\n  console.log('newList', newList);\n  const {\n    theme\n  } = useContext(ThemeContext);\n\n  // console.log(recordsPerPage);\n  const handleToggleAll = () => {\n    dispatch(toggleAll());\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"main\",\n    style: {\n      backgroundColor: theme.background,\n      color: theme.foreground\n    },\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      class: \"todo-list\",\n      children: newList.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        theme: theme,\n        todo: todo\n        // getTodoEditId={getTodoEditId}\n        // onEditTodo={onEditTodo}\n        // markCompleted={markCompleted}\n        // removeTodo={removeTodo}\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n_s(TodoList, \"EErU6zvQ+pJQ80qKM3vG/XsPp6Y=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TodoList;\nexport default _c2 = ScrollFunc(TodoList);\nvar _c, _c2;\n$RefreshReg$(_c, \"TodoList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useContext","ThemeContext","Todo","ScrollFunc","useSelector","useDispatch","jsxDEV","_jsxDEV","TodoList","_s","todo","state","listTodo","todoList","dispatch","recordsPerPage","currentPage","setCurrentPage","lastIndex","console","log","newList","slice","theme","handleToggleAll","toggleAll","className","style","backgroundColor","background","color","foreground","children","class","map","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["D:/WORKSPACE/React/projectw3/src/Components/content/TodoList.jsx"],"sourcesContent":["import './TodoList.css';\nimport React, { useState } from \"react\";\nimport {useContext} from 'react';\nimport { ThemeContext  } from '../../Context/Theme-Provider';\nimport Todo from '../todo/Todo';\nimport ScrollFunc from '../Hoc/ScrollHoc';\nimport { useSelector , useDispatch} from 'react-redux';\n\n\n\nconst TodoList = () => {\n  const todo = useSelector((state) => state.listTodo.todoList);\n  const dispatch = useDispatch();\n  const recordsPerPage = 5;\n  const [currentPage, setCurrentPage] = useState(1);\n  const lastIndex = currentPage * recordsPerPage;\n  console.log('lastIndex',lastIndex);\n  const newList = todo.slice(0, lastIndex);\n  console.log('newList',newList);\n\n  const { theme } = useContext(ThemeContext);\n\n  // console.log(recordsPerPage);\n  const handleToggleAll = () => {\n    dispatch(toggleAll());\n  }\n\n\n    return (\n         <section className='main'   style={{ backgroundColor: theme.background, color: theme.foreground }}\n         >\n            {/* <input className='toggle-all' type='checkbox' checked={isCheckAll}/> */}\n            {/* <label htmlFor=\"toggle-all\" onClick={checkAllTodo}></label> */}\n            <ul class=\"todo-list\">\n                { \n                  newList.map((todo) =>  \n                    <Todo \n                      theme={theme}\n                      key={todo.id} \n                      todo={todo} \n                      // getTodoEditId={getTodoEditId}\n                      // onEditTodo={onEditTodo}\n                      // markCompleted={markCompleted}\n                      // removeTodo={removeTodo}\n                    />\n                  )\n                }\n            </ul>\n         </section>\n  )\n}\n\nexport default ScrollFunc(TodoList);\n"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,UAAU,QAAO,OAAO;AAChC,SAASC,YAAY,QAAS,8BAA8B;AAC5D,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,UAAU,MAAM,kBAAkB;AACzC,SAASC,WAAW,EAAGC,WAAW,QAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIvD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,IAAI,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACC,QAAQ,CAAC;EAC5D,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,cAAc,GAAG,CAAC;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMmB,SAAS,GAAGF,WAAW,GAAGD,cAAc;EAC9CI,OAAO,CAACC,GAAG,CAAC,WAAW,EAACF,SAAS,CAAC;EAClC,MAAMG,OAAO,GAAGX,IAAI,CAACY,KAAK,CAAC,CAAC,EAAEJ,SAAS,CAAC;EACxCC,OAAO,CAACC,GAAG,CAAC,SAAS,EAACC,OAAO,CAAC;EAE9B,MAAM;IAAEE;EAAM,CAAC,GAAGvB,UAAU,CAACC,YAAY,CAAC;;EAE1C;EACA,MAAMuB,eAAe,GAAGA,CAAA,KAAM;IAC5BV,QAAQ,CAACW,SAAS,CAAC,CAAC,CAAC;EACvB,CAAC;EAGC,oBACKlB,OAAA;IAASmB,SAAS,EAAC,MAAM;IAAGC,KAAK,EAAE;MAAEC,eAAe,EAAEL,KAAK,CAACM,UAAU;MAAEC,KAAK,EAAEP,KAAK,CAACQ;IAAW,CAAE;IAAAC,QAAA,eAI/FzB,OAAA;MAAI0B,KAAK,EAAC,WAAW;MAAAD,QAAA,EAEfX,OAAO,CAACa,GAAG,CAAExB,IAAI,iBACfH,OAAA,CAACL,IAAI;QACHqB,KAAK,EAAEA,KAAM;QAEbb,IAAI,EAAEA;QACN;QACA;QACA;QACA;MAAA,GALKA,IAAI,CAACyB,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEnB,CAAC;AAAA9B,EAAA,CAxCKD,QAAQ;EAAA,QACCJ,WAAW,EACPC,WAAW;AAAA;AAAAmC,EAAA,GAFxBhC,QAAQ;AA0Cd,eAAAiC,GAAA,GAAetC,UAAU,CAACK,QAAQ,CAAC;AAAC,IAAAgC,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}