{"ast":null,"code":"import { ADD_TODO, GET_TODO_EDIT_ID, ON_EDIT_TODO, MARK_COMPLETED, CHECK_ALL_TODO } from '../actions/index';\nconst initialState = {\n  todoList: [{\n    id: 1,\n    name: 'todo1',\n    isCheck: true\n  }, {\n    id: 2,\n    name: 'todo2',\n    isCheck: false\n  }],\n  todoEditId: '',\n  nameEdit: '',\n  isCheck: false,\n  status: 'ALL'\n};\nconst todosReducer = (state = initialState, action) => {\n  const {\n    todoList\n  } = state;\n  const list = JSON.parse(JSON.stringify(todoList));\n  switch (action.type) {\n    case ADD_TODO:\n      return Object.assign({}, state, {\n        todoList: [...list, action.todo]\n      });\n    case GET_TODO_EDIT_ID:\n      if (action.id >= 0) {\n        const todo = list.find(todo => id === todo.id);\n      }\n      return Object.assign({}, state, {\n        todoEditId: action.id\n        // nameEdit: todo.name\n      });\n    case ON_EDIT_TODO:\n      if (action.id >= 0) {\n        list.splice(action.id, 1, action.todo);\n      }\n      return Object.assign({}, state, {\n        todoList: list\n        //todoEditId :''\n      });\n    default:\n      return state;\n  }\n};\nexport default todosReducer;","map":{"version":3,"names":["ADD_TODO","GET_TODO_EDIT_ID","ON_EDIT_TODO","MARK_COMPLETED","CHECK_ALL_TODO","initialState","todoList","id","name","isCheck","todoEditId","nameEdit","status","todosReducer","state","action","list","JSON","parse","stringify","type","Object","assign","todo","find","splice"],"sources":["D:/WORKSPACE/React/projectw3/src/store/reducers/todoReducer.js"],"sourcesContent":["import {\r\n    ADD_TODO,\r\n    GET_TODO_EDIT_ID,\r\n    ON_EDIT_TODO,\r\n    MARK_COMPLETED,\r\n    CHECK_ALL_TODO\r\n} from '../actions/index'\r\n\r\nconst initialState = {\r\n    todoList : [{\r\n        id: 1,\r\n        name: 'todo1',\r\n        isCheck: true\r\n    },{\r\n        id: 2,\r\n        name: 'todo2',\r\n        isCheck: false\r\n    }],\r\n    todoEditId:'',\r\n    nameEdit:'',\r\n    isCheck: false,\r\n    status: 'ALL'\r\n}\r\nconst todosReducer = (state = initialState, action) => {\r\n    const { todoList } = state\r\n    const list = JSON.parse(JSON.stringify(todoList))\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return Object.assign({}, state, {\r\n                todoList: [...list,action.todo]\r\n            })\r\n        case GET_TODO_EDIT_ID:\r\n            if(action.id >=0) {\r\n                const todo = list.find(todo => id === todo.id);\r\n            }\r\n            return Object.assign({}, state, {\r\n                todoEditId: action.id\r\n               // nameEdit: todo.name\r\n            })\r\n        case ON_EDIT_TODO:\r\n            if( action.id >= 0) {\r\n                list.splice(action.id, 1, action.todo)\r\n            }\r\n            return Object.assign({}, state, {\r\n                todoList : list,\r\n                //todoEditId :''\r\n            \r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default todosReducer"],"mappings":"AAAA,SACIA,QAAQ,EACRC,gBAAgB,EAChBC,YAAY,EACZC,cAAc,EACdC,cAAc,QACX,kBAAkB;AAEzB,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAG,CAAC;IACRC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,OAAO;IACbC,OAAO,EAAE;EACb,CAAC,EAAC;IACEF,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,OAAO;IACbC,OAAO,EAAE;EACb,CAAC,CAAC;EACFC,UAAU,EAAC,EAAE;EACbC,QAAQ,EAAC,EAAE;EACXF,OAAO,EAAE,KAAK;EACdG,MAAM,EAAE;AACZ,CAAC;AACD,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAGT,YAAY,EAAEU,MAAM,KAAK;EACnD,MAAM;IAAET;EAAS,CAAC,GAAGQ,KAAK;EAC1B,MAAME,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACb,QAAQ,CAAC,CAAC;EACjD,QAAQS,MAAM,CAACK,IAAI;IACf,KAAKpB,QAAQ;MACT,OAAOqB,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAER,KAAK,EAAE;QAC5BR,QAAQ,EAAE,CAAC,GAAGU,IAAI,EAACD,MAAM,CAACQ,IAAI;MAClC,CAAC,CAAC;IACN,KAAKtB,gBAAgB;MACjB,IAAGc,MAAM,CAACR,EAAE,IAAG,CAAC,EAAE;QACd,MAAMgB,IAAI,GAAGP,IAAI,CAACQ,IAAI,CAACD,IAAI,IAAIhB,EAAE,KAAKgB,IAAI,CAAChB,EAAE,CAAC;MAClD;MACA,OAAOc,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAER,KAAK,EAAE;QAC5BJ,UAAU,EAAEK,MAAM,CAACR;QACpB;MACH,CAAC,CAAC;IACN,KAAKL,YAAY;MACb,IAAIa,MAAM,CAACR,EAAE,IAAI,CAAC,EAAE;QAChBS,IAAI,CAACS,MAAM,CAACV,MAAM,CAACR,EAAE,EAAE,CAAC,EAAEQ,MAAM,CAACQ,IAAI,CAAC;MAC1C;MACA,OAAOF,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAER,KAAK,EAAE;QAC5BR,QAAQ,EAAGU;QACX;MAEJ,CAAC,CAAC;IACN;MACI,OAAOF,KAAK;EACpB;AACJ,CAAC;AACD,eAAeD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}