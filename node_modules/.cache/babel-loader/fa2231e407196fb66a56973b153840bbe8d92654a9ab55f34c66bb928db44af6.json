{"ast":null,"code":"import { produce } from 'immer';\nimport { ADD_TODO, ON_EDIT_TODO } from '../redux/actions';\nconst initialState = {\n  todoList: []\n};\nconst listTodo = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return produce(state, draft => {\n        draft.todoList.push(action.payload);\n      });\n    case ON_EDIT_TODO:\n      return produce(state, draft => {\n        // if(id >=0) {\n        //   //     const updatedList =todoList.map(item => item.id===id ? ({...item, name: todo.name}) : item)\n\n        //   //    // console.log(todo)\n        //   //     //console.log(updatedList.map(item => item))\n        //   //     setTodoList(updatedList);\n        //   //   }\n        const {\n          itemId,\n          content\n        } = action.payload;\n        const todo = draft.todoList.find(todo => todo.itemId === itemId);\n        if (item) {\n          item.content = content;\n        }\n      });\n    default:\n      return state;\n  }\n};\nexport default listTodo;","map":{"version":3,"names":["produce","ADD_TODO","ON_EDIT_TODO","initialState","todoList","listTodo","state","action","type","draft","push","payload","itemId","content","todo","find","item"],"sources":["D:/WORKSPACE/React/projectw3/src/Components/reducer/listTodo.js"],"sourcesContent":["import { produce } from 'immer';\r\nimport { ADD_TODO,ON_EDIT_TODO} from '../redux/actions';\r\n\r\nconst initialState = {\r\n  todoList: [],\r\n};\r\n\r\nconst listTodo = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return produce(state, (draft) => {\r\n        draft.todoList.push(action.payload);\r\n      });\r\n\r\n\r\n    case ON_EDIT_TODO:\r\n      return produce(state, (draft) => {\r\n        // if(id >=0) {\r\n        //   //     const updatedList =todoList.map(item => item.id===id ? ({...item, name: todo.name}) : item)\r\n              \r\n        //   //    // console.log(todo)\r\n        //   //     //console.log(updatedList.map(item => item))\r\n        //   //     setTodoList(updatedList);\r\n        //   //   }\r\n        const { itemId, content } = action.payload;\r\n        const todo = draft.todoList.find(todo => todo.itemId === itemId);\r\n        if (item) {\r\n          item.content = content;\r\n        }\r\n      });\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listTodo;\r\n\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,QAAQ,EAACC,YAAY,QAAO,kBAAkB;AAEvD,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,QAAQ,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EACjD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKP,QAAQ;MACX,OAAOD,OAAO,CAACM,KAAK,EAAGG,KAAK,IAAK;QAC/BA,KAAK,CAACL,QAAQ,CAACM,IAAI,CAACH,MAAM,CAACI,OAAO,CAAC;MACrC,CAAC,CAAC;IAGJ,KAAKT,YAAY;MACf,OAAOF,OAAO,CAACM,KAAK,EAAGG,KAAK,IAAK;QAC/B;QACA;;QAEA;QACA;QACA;QACA;QACA,MAAM;UAAEG,MAAM;UAAEC;QAAQ,CAAC,GAAGN,MAAM,CAACI,OAAO;QAC1C,MAAMG,IAAI,GAAGL,KAAK,CAACL,QAAQ,CAACW,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACF,MAAM,KAAKA,MAAM,CAAC;QAChE,IAAII,IAAI,EAAE;UACRA,IAAI,CAACH,OAAO,GAAGA,OAAO;QACxB;MACF,CAAC,CAAC;IAEJ;MACE,OAAOP,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}