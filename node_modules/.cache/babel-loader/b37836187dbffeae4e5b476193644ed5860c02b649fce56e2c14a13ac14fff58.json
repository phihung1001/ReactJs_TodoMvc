{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORKSPACE\\\\React\\\\projectw3\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, lazy } from \"react\";\nimport './App.css';\nimport TodoList from './Components/content/TodoList';\nimport Footer from './Components/footer/Footer';\nimport Header from './Components/header/Header';\nimport Panigation from './Components/pagination/Pagination';\nimport ReactPaginate from 'react-paginate';\nimport ThemeBtn from './Components/Theme-Btn';\nimport { ThemeContext } from \"./Context/Theme-Provider\";\nimport { produce } from 'immer';\nimport { useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todoList, setTodoList] = useState([]);\n  const [isCheckAll, setIscheckAll] = useState(false);\n  const [status, setStatus] = useState('ALL');\n  const headerRef = useRef();\n  const componentWillMount = () => {\n    setIscheckAll(!isNotCheckAll(todoList));\n  };\n  const getTodoEditId = id => {\n    const todo = todoList.find(todo => id === todo.id);\n    const name = todo.name;\n    headerRef.current.updateState(id, name);\n  };\n  const onEditTodo = (todo = {}, id = -1) => {\n    if (id >= 0) {\n      const updatedList = todoList.map(item => item.id === id ? {\n        ...item,\n        name: todo.name\n      } : item);\n\n      // console.log(todo)\n      //console.log(updatedList.map(item => item))\n      setTodoList(updatedList);\n    }\n  };\n  const markCompleted = (id = '') => {\n    const updatedList = todoList.map(todo => todo.id === id ? {\n      ...todo,\n      isCheck: !todo.isCheck\n    } : todo);\n    setTodoList(updatedList);\n    setIscheckAll(!isNotCheckAll(updatedList));\n  };\n  const checkAllTodo = () => {\n    const updatedList = todoList.map(todo => ({\n      ...todo,\n      isCheck: !isCheckAll\n    }));\n    setTodoList(updatedList);\n    setIscheckAll(!isCheckAll);\n  };\n  const setStatusFilter = (status = '') => {\n    setStatus(status);\n  };\n  const clearCompleted = () => {\n    setTodoList(filterBystatus(todoList, 'ACTIVE'));\n  };\n  const removeTodo = (id = '') => {\n    setTodoList(filterBystatus(todoList, 'REMOVE', id));\n  };\n\n  //   const prePage = () => {\n  //     if (currentPage !== 1) setCurrentPage(currentPage - 1);\n  //   }\n  //   const nextPage = () => {\n  //     const npage = Math.ceil(todoList.length / recordsPerPage)\n  //     if (currentPage !== npage) setCurrentPage(currentPage + 1);\n  //   }\n\n  //   const changePage = (id) => {\n  //     setCurrentPage(id);\n  //  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp\",\n    children: [/*#__PURE__*/_jsxDEV(ThemeBtn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      ref: headerRef\n      // onEditTodo ={onEditTodo}\n      //isCheckAll ={isCheckAll}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(TodoList\n    //todoList={filterBystatus(todoList,status)}\n    //currentPage={currentPage}\n    // getTodoEditId = {getTodoEditId}\n    // onEditTodo = {onEditTodo}\n    //markCompleted ={markCompleted}\n    //isCheckAll ={isCheckAll}\n    , {\n      checkAllTodo: checkAllTodo,\n      removeTodo: removeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      setStatusFilter: setStatusFilter,\n      status: status,\n      clearCompleted: clearCompleted,\n      numOfTodoLeft: filterBystatus(todoList, 'ACTIVE').length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"xnvO1pwADWUI1dGdefAxtwsBaDo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","lazy","TodoList","Footer","Header","Panigation","ReactPaginate","ThemeBtn","ThemeContext","produce","useMemo","useState","jsxDEV","_jsxDEV","App","_s","todoList","setTodoList","isCheckAll","setIscheckAll","status","setStatus","headerRef","componentWillMount","isNotCheckAll","getTodoEditId","id","todo","find","name","current","updateState","onEditTodo","updatedList","map","item","markCompleted","isCheck","checkAllTodo","setStatusFilter","clearCompleted","filterBystatus","removeTodo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","numOfTodoLeft","length","_c","$RefreshReg$"],"sources":["D:/WORKSPACE/React/projectw3/src/App.js"],"sourcesContent":["import React, {useRef,lazy } from \"react\";\nimport './App.css';\nimport TodoList from './Components/content/TodoList';\nimport Footer from './Components/footer/Footer';\nimport Header from './Components/header/Header';\nimport Panigation from './Components/pagination/Pagination';\nimport ReactPaginate from 'react-paginate';\nimport ThemeBtn from './Components/Theme-Btn';\nimport { ThemeContext } from \"./Context/Theme-Provider\";\nimport {  produce } from 'immer';\n\nimport { useMemo, useState } from \"react\";\n\nconst App = () => {\n  const [todoList, setTodoList ] = useState([\n  ]);\n  const [isCheckAll, setIscheckAll ] = useState(false);\n  const [status, setStatus ] = useState('ALL');\n  const headerRef = useRef();\n  \n  \n\n  const componentWillMount = () => {\n      setIscheckAll(!isNotCheckAll(todoList) )\n  }\n\n  \n  const getTodoEditId = (id) => {\n      const todo = todoList.find(todo => id === todo.id);\n      const name = todo.name;\n      headerRef.current.updateState(id,name);\n  }\n\n  const onEditTodo= (todo = {}, id =-1) => {\n    if(id >=0) {\n      const updatedList =todoList.map(item => item.id===id ? ({...item, name: todo.name}) : item)\n      \n     // console.log(todo)\n      //console.log(updatedList.map(item => item))\n      setTodoList(updatedList);\n    }\n  }\n\n  const markCompleted = (id = '') => {\n    const updatedList = todoList.map(todo =>  todo.id ===id ? ({...todo, isCheck: !todo.isCheck}) : todo )\n    setTodoList(updatedList);\n    setIscheckAll(!isNotCheckAll(updatedList) )\n  }\n\n  const checkAllTodo = () => {\n      const updatedList = todoList.map(todo => ({...todo ,isCheck:!isCheckAll})); \n      setTodoList(updatedList)\n      setIscheckAll(!isCheckAll)\n  }\n\n  const setStatusFilter = (status ='') =>{\n    setStatus(status);\n  }\n\n  const clearCompleted = () => {\n    setTodoList(filterBystatus(todoList,'ACTIVE'))\n  }\n  const removeTodo = ( id ='') => {\n    setTodoList(filterBystatus(todoList,'REMOVE',id))\n  }\n\n//   const prePage = () => {\n//     if (currentPage !== 1) setCurrentPage(currentPage - 1);\n//   }\n//   const nextPage = () => {\n//     const npage = Math.ceil(todoList.length / recordsPerPage)\n//     if (currentPage !== npage) setCurrentPage(currentPage + 1);\n//   }\n \n//   const changePage = (id) => {\n//     setCurrentPage(id);\n//  }\n\n  return (\n       \n      <div className=\"todoapp\">\n        <ThemeBtn/>\n         <Header  \n             ref={headerRef}\n            // onEditTodo ={onEditTodo}\n             //isCheckAll ={isCheckAll}\n          />\n         <TodoList \n             //todoList={filterBystatus(todoList,status)}\n            //currentPage={currentPage}\n            // getTodoEditId = {getTodoEditId}\n            // onEditTodo = {onEditTodo}\n             //markCompleted ={markCompleted}\n             //isCheckAll ={isCheckAll}\n             checkAllTodo={checkAllTodo}\n             removeTodo = {removeTodo}\n           \n          /> \n         <Footer\n            setStatusFilter={setStatusFilter}\n            status={status}\n            clearCompleted = {clearCompleted}\n            numOfTodoLeft = {filterBystatus(todoList,'ACTIVE').length}\n         />\n         {/* <Panigation \n             ref={pageRef}\n             prePage = {prePage}\n             nextPage = {nextPage}\n             changePage = {changePage}\n             numbers = {numbers}\n         />    */}\n      </div>\n    )\n }\n\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}