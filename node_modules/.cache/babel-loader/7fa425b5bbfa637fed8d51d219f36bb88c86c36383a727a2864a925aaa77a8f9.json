{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORKSPACE\\\\React\\\\projectw3\\\\src\\\\Components\\\\todo\\\\Todo.jsx\",\n  _s = $RefreshSig$();\nimport './Todo.css';\nimport React from \"react\";\nimport { useState, useContext } from 'react';\nimport { ThemeContext } from '../../Context/Theme-Provider';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todo = ({\n  todo1,\n  getTodoEditId,\n  todoEditId,\n  onEditTodo,\n  index,\n  markCompleted,\n  removeTodo\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const isEdit = todoEditId === todo.id;\n  console.log('giatri1');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: ` ${todo.isCheck ? 'completed' : ''}`,\n      style: {\n        backgroundColor: theme.background,\n        color: theme.foreground\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          checked: todo.isCheck,\n          type: \"checkbox\",\n          onChange: () => markCompleted(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            backgroundColor: theme.background,\n            color: theme.foreground\n          },\n          onDoubleClick: () => getTodoEditId(todo.id),\n          children: [\" \", todo.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"destroy\",\n          onClick: () => removeTodo(todo.id),\n          style: {\n            backgroundColor: theme.background,\n            color: theme.foreground\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Todo, \"UkKmruceaMw5Sp366p8bdBKFnv8=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","useContext","ThemeContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","todo1","getTodoEditId","todoEditId","onEditTodo","index","markCompleted","removeTodo","_s","name","setName","theme","isEdit","todo","id","console","log","children","className","isCheck","style","backgroundColor","background","color","foreground","checked","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onDoubleClick","onClick","_c","$RefreshReg$"],"sources":["D:/WORKSPACE/React/projectw3/src/Components/todo/Todo.jsx"],"sourcesContent":["import './Todo.css';\nimport React from \"react\";\nimport { useState, useContext } from 'react';\nimport { ThemeContext  } from '../../Context/Theme-Provider';\n\n\nconst Todo = ({todo1,getTodoEditId,todoEditId,onEditTodo, index, markCompleted, removeTodo}) => {\n\n  const [ name, setName ] = useState('');\n  const { theme } = useContext(ThemeContext);\n  const  isEdit= todoEditId===todo.id\n  console.log('giatri1');\n \n  return (\n    <>\n        <li  className={` ${todo.isCheck ? 'completed' : ''}`} style={{ backgroundColor: theme.background, color: theme.foreground }}\n        >\n            <div className='view'>\n              <input className=\"toggle\" \n                     checked={todo.isCheck} \n                     type=\"checkbox\"\n                     onChange ={() => markCompleted(todo.id)}\n              />\n              <label style={{ backgroundColor: theme.background, color: theme.foreground }} onDoubleClick={() => getTodoEditId(todo.id)}> {todo.name} </label>\n              <button className='destroy' onClick={ () => removeTodo(todo.id)}style={{ backgroundColor: theme.background, color: theme.foreground }}></button>\n             </div> \n        </li>\n    </>\n  );\n}\n\nexport default Todo;"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,SAASC,YAAY,QAAS,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG7D,MAAMC,IAAI,GAAGA,CAAC;EAACC,KAAK;EAACC,aAAa;EAACC,UAAU;EAACC,UAAU;EAAEC,KAAK;EAAEC,aAAa;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAE9F,MAAM,CAAEC,IAAI,EAAEC,OAAO,CAAE,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEkB;EAAM,CAAC,GAAGjB,UAAU,CAACC,YAAY,CAAC;EAC1C,MAAOiB,MAAM,GAAET,UAAU,KAAGU,IAAI,CAACC,EAAE;EACnCC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EAEtB,oBACEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACIpB,OAAA;MAAKqB,SAAS,EAAE,IAAIL,IAAI,CAACM,OAAO,GAAG,WAAW,GAAG,EAAE,EAAG;MAACC,KAAK,EAAE;QAAEC,eAAe,EAAEV,KAAK,CAACW,UAAU;QAAEC,KAAK,EAAEZ,KAAK,CAACa;MAAW,CAAE;MAAAP,QAAA,eAEzHpB,OAAA;QAAKqB,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACnBpB,OAAA;UAAOqB,SAAS,EAAC,QAAQ;UAClBO,OAAO,EAAEZ,IAAI,CAACM,OAAQ;UACtBO,IAAI,EAAC,UAAU;UACfC,QAAQ,EAAGA,CAAA,KAAMrB,aAAa,CAACO,IAAI,CAACC,EAAE;QAAE;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eACFlC,OAAA;UAAOuB,KAAK,EAAE;YAAEC,eAAe,EAAEV,KAAK,CAACW,UAAU;YAAEC,KAAK,EAAEZ,KAAK,CAACa;UAAW,CAAE;UAACQ,aAAa,EAAEA,CAAA,KAAM9B,aAAa,CAACW,IAAI,CAACC,EAAE,CAAE;UAAAG,QAAA,GAAC,GAAC,EAACJ,IAAI,CAACJ,IAAI,EAAC,GAAC;QAAA;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChJlC,OAAA;UAAQqB,SAAS,EAAC,SAAS;UAACe,OAAO,EAAGA,CAAA,KAAM1B,UAAU,CAACM,IAAI,CAACC,EAAE,CAAE;UAAAM,KAAK,EAAE;YAAEC,eAAe,EAAEV,KAAK,CAACW,UAAU;YAAEC,KAAK,EAAEZ,KAAK,CAACa;UAAW;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5I;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC,gBACP,CAAC;AAEP,CAAC;AAAAvB,EAAA,CAvBKR,IAAI;AAAAkC,EAAA,GAAJlC,IAAI;AAyBV,eAAeA,IAAI;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}