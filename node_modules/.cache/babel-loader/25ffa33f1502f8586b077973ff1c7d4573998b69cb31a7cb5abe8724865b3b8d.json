{"ast":null,"code":"import { ADD_TODO, GET_TODO_EDIT_ID, ON_EDIT_TODO, MARK_COMPLETED, CHECK_ALL_TODO, SET_STATUS_FILTER, CLEAR_COMPLETED, REMOVE_TODO } from '../actions/index';\nimport { isNotCheckAll } from '../../helpers/todoHelper';\nimport { filterBystatus } from '../../helpers/todoHelper';\nconst initialState = {\n  todoList: [{\n    id: 1,\n    name: 'todo1',\n    isCheck: true\n  }, {\n    id: 2,\n    name: 'todo2',\n    isCheck: false\n  }],\n  todoEditId: '',\n  nameEdit: '',\n  isCheckAll: false,\n  status: 'ALL'\n};\nconst todosReducer = (state = initialState, action) => {\n  const {\n    todoList,\n    todoEditId,\n    isCheckAll,\n    status\n  } = state;\n  //todoList = filterBystatus(todoList,status)\n  const list = JSON.parse(JSON.stringify(todoList));\n  switch (action.type) {\n    case ADD_TODO:\n      return Object.assign({}, state, {\n        todoList: [...list, action.todo]\n      });\n    case GET_TODO_EDIT_ID:\n      if (action.id >= 0) {\n        const todo = todoList.find(todo => id === todo.id);\n      }\n      return Object.assign({}, state, {\n        todoEditId: action.id\n        // nameEdit: todo.name\n      });\n    case ON_EDIT_TODO:\n      if (action.id >= 0) {\n        todoList.splice(action.id, 1, action.todo);\n      }\n      return Object.assign({}, state, {\n        todoList: list\n        //todoEditId :''\n      });\n    case MARK_COMPLETED:\n      const updatedList = todoList.map(todo => todo.id === action.id ? {\n        ...todo,\n        isCheck: !todo.isCheck\n      } : todo);\n      return Object.assign({}, state, {\n        todoList: updatedList,\n        isCheckAll: !isNotCheckAll(updatedList)\n      });\n    case CHECK_ALL_TODO:\n      return Object.assign({}, state, {\n        todoList: todoList.map(todo => ({\n          ...todo,\n          isCheck: !isCheckAll\n        })),\n        isCheckAll: !isCheckAll\n      });\n    case SET_STATUS_FILTER:\n      return Object.assign({}, state, {\n        status: action.status,\n        todoList: filterBystatus(todoList, status)\n      });\n    case CLEAR_COMPLETED:\n      return Object.assign({}, state, {\n        todoList: filterBystatus(todoList, 'ACTIVE')\n      });\n    case REMOVE_TODO:\n      return Object.assign({}, state, {\n        todoList: filterBystatus(todoList, 'REMOVE', action.id)\n      });\n    default:\n      return state;\n  }\n};\nexport default todosReducer;","map":{"version":3,"names":["ADD_TODO","GET_TODO_EDIT_ID","ON_EDIT_TODO","MARK_COMPLETED","CHECK_ALL_TODO","SET_STATUS_FILTER","CLEAR_COMPLETED","REMOVE_TODO","isNotCheckAll","filterBystatus","initialState","todoList","id","name","isCheck","todoEditId","nameEdit","isCheckAll","status","todosReducer","state","action","list","JSON","parse","stringify","type","Object","assign","todo","find","splice","updatedList","map"],"sources":["D:/WORKSPACE/React/projectw3/src/store/reducers/todoReducer.js"],"sourcesContent":["import {\r\n    ADD_TODO,\r\n    GET_TODO_EDIT_ID,\r\n    ON_EDIT_TODO,\r\n    MARK_COMPLETED,\r\n    CHECK_ALL_TODO,\r\n    SET_STATUS_FILTER,\r\n    CLEAR_COMPLETED,\r\n    REMOVE_TODO\r\n} from '../actions/index'\r\n\r\nimport { isNotCheckAll } from '../../helpers/todoHelper'\r\nimport { filterBystatus} from '../../helpers/todoHelper'\r\n\r\nconst initialState = {\r\n    todoList : [{\r\n        id: 1,\r\n        name: 'todo1',\r\n        isCheck: true\r\n    },{\r\n        id: 2,\r\n        name: 'todo2',\r\n        isCheck: false\r\n    }],\r\n    todoEditId:'',\r\n    nameEdit:'',\r\n    isCheckAll: false,\r\n    status: 'ALL'\r\n}\r\nconst todosReducer = (state = initialState, action) => {\r\n    const { todoList ,todoEditId, isCheckAll, status} = state\r\n    //todoList = filterBystatus(todoList,status)\r\n    const list = JSON.parse(JSON.stringify(todoList))\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return Object.assign({}, state, {\r\n                todoList: [...list,action.todo]\r\n            })\r\n        case GET_TODO_EDIT_ID:\r\n            if(action.id >=0) {\r\n                const todo = todoList.find(todo => id === todo.id);\r\n            }\r\n            return Object.assign({}, state, {\r\n                todoEditId: action.id\r\n               // nameEdit: todo.name\r\n            })\r\n        case ON_EDIT_TODO:\r\n            if( action.id >= 0) {\r\n                todoList.splice(action.id, 1, action.todo)\r\n            }\r\n            return Object.assign({}, state, {\r\n                todoList : list,\r\n                //todoEditId :''\r\n            \r\n            })\r\n        case MARK_COMPLETED:\r\n            const updatedList = todoList.map(todo =>  todo.id ===action.id ? ({...todo, isCheck: !todo.isCheck}) : todo )\r\n            return Object.assign({}, state, {\r\n                todoList : updatedList,\r\n                isCheckAll : !isNotCheckAll(updatedList)\r\n            })\r\n        case CHECK_ALL_TODO:\r\n            return Object.assign({}, state, {\r\n                todoList : todoList.map(todo => ({...todo ,isCheck: !isCheckAll})),\r\n                isCheckAll : !isCheckAll\r\n            })\r\n        case SET_STATUS_FILTER:\r\n            return Object.assign({}, state, {\r\n                status: action.status,\r\n                todoList : filterBystatus(todoList,status)\r\n            })\r\n        case CLEAR_COMPLETED:\r\n            return Object.assign({}, state, {\r\n                todoList : filterBystatus(todoList,'ACTIVE')\r\n            })\r\n        case REMOVE_TODO:\r\n            return Object.assign({}, state, {\r\n                todoList : filterBystatus(todoList,'REMOVE',action.id)\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default todosReducer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}