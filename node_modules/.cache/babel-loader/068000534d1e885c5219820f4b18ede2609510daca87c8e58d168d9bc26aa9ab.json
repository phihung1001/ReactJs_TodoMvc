{"ast":null,"code":"var _jsxFileName = \"D:\\\\WORKSPACE\\\\React\\\\projectw3\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, lazy } from \"react\";\nimport './App.css';\nimport TodoList from './Components/content/TodoList';\nimport Footer from './Components/footer/Footer';\nimport Header from './Components/header/Header';\nimport Panigation from './Components/pagination/Pagination';\nimport ReactPaginate from 'react-paginate';\nimport ThemeBtn from './Components/Theme-Btn';\nimport { ThemeContext } from \"./Context/Theme-Provider\";\nimport { produce } from 'immer';\nimport { useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isNotCheckAll = (todos = []) => todos.find(todo => !todo.isCheck);\nexport const filterBystatus = (todos = [], status = '', id = '') => {\n  switch (status) {\n    case 'ACTIVE':\n      return todos.filter(todo => !todo.isCheck);\n    case 'COMPLETED':\n      return todos.filter(todo => todo.isCheck);\n    case 'REMOVE':\n      return todos.filter(todo => todo.id != id);\n    default:\n      return todos;\n  }\n};\nconst App = () => {\n  _s();\n  const [state, setState] = useState({\n    todoList: [{\n      id: 1,\n      name: 'todo1',\n      isCheck: true\n    }, {\n      id: 2,\n      name: 'todo2',\n      isCheck: false\n    }],\n    isCheckAll: false,\n    status: 'ALL'\n  });\n  const [todoList, setTodoList] = useState([]);\n  const [isCheckAll, setIscheckAll] = useState(false);\n  const [status, setStatus] = useState('ALL');\n  // const [currentPage, setCurrentPage ] = useState(1);\n  // const recordsPerPage= 5 ;\n  // const npage = Math.ceil(todoList.length / recordsPerPage)\n  // const numbers = [...Array(npage+1).keys()].slice(1)\n\n  const headerRef = useRef();\n  const pageRef = useRef();\n  const componentWillMount = () => {\n    setIscheckAll(!isNotCheckAll(todoList));\n  };\n  const addTodo = (todo = {}) => {\n    setTodoList(preState => produce(preState, newState => {\n      newState.push(todo);\n    }));\n  };\n  const getTodoEditId = id => {\n    const todo = todoList.find(todo => id === todo.id);\n    const name = todo.name;\n    headerRef.current.updateState(id, name);\n  };\n  const onEditTodo = (todo = {}, id = -1) => {\n    if (id >= 0) {\n      const updatedList = todoList.map(item => item.id === id ? {\n        ...item,\n        name: todo.name\n      } : item);\n\n      // console.log(todo)\n      //console.log(updatedList.map(item => item))\n      setTodoList(updatedList);\n    }\n  };\n  const markCompleted = (id = '') => {\n    const updatedList = todoList.map(todo => todo.id === id ? {\n      ...todo,\n      isCheck: !todo.isCheck\n    } : todo);\n    setTodoList(updatedList);\n    setIscheckAll(!isNotCheckAll(updatedList));\n  };\n  const checkAllTodo = () => {\n    const updatedList = todoList.map(todo => ({\n      ...todo,\n      isCheck: !isCheckAll\n    }));\n    setTodoList(updatedList);\n    setIscheckAll(!isCheckAll);\n  };\n  const setStatusFilter = (status = '') => {\n    setStatus(status);\n  };\n  const clearCompleted = () => {\n    setTodoList(filterBystatus(todoList, 'ACTIVE'));\n  };\n  const removeTodo = (id = '') => {\n    setTodoList(filterBystatus(todoList, 'REMOVE', id));\n  };\n\n  //   const prePage = () => {\n  //     if (currentPage !== 1) setCurrentPage(currentPage - 1);\n  //   }\n  //   const nextPage = () => {\n  //     const npage = Math.ceil(todoList.length / recordsPerPage)\n  //     if (currentPage !== npage) setCurrentPage(currentPage + 1);\n  //   }\n\n  //   const changePage = (id) => {\n  //     setCurrentPage(id);\n  //  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp\",\n    children: [/*#__PURE__*/_jsxDEV(ThemeBtn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      ref: headerRef,\n      addTodo: addTodo,\n      onEditTodo: onEditTodo,\n      isCheckAll: isCheckAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todoList: filterBystatus(todoList, status)\n      //currentPage={currentPage}\n      ,\n      getTodoEditId: getTodoEditId,\n      onEditTodo: onEditTodo,\n      markCompleted: markCompleted,\n      isCheckAll: isCheckAll,\n      checkAllTodo: checkAllTodo,\n      removeTodo: removeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      setStatusFilter: setStatusFilter,\n      status: status,\n      clearCompleted: clearCompleted,\n      numOfTodoLeft: filterBystatus(todoList, 'ACTIVE').length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"pOSRZ0twsxzgSWNhzmQtATD/7S4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","lazy","TodoList","Footer","Header","Panigation","ReactPaginate","ThemeBtn","ThemeContext","produce","useMemo","useState","jsxDEV","_jsxDEV","isNotCheckAll","todos","find","todo","isCheck","filterBystatus","status","id","filter","App","_s","state","setState","todoList","name","isCheckAll","setTodoList","setIscheckAll","setStatus","headerRef","pageRef","componentWillMount","addTodo","preState","newState","push","getTodoEditId","current","updateState","onEditTodo","updatedList","map","item","markCompleted","checkAllTodo","setStatusFilter","clearCompleted","removeTodo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","numOfTodoLeft","length","_c","$RefreshReg$"],"sources":["D:/WORKSPACE/React/projectw3/src/App.js"],"sourcesContent":["import React, {useRef,lazy } from \"react\";\nimport './App.css';\nimport TodoList from './Components/content/TodoList';\nimport Footer from './Components/footer/Footer';\nimport Header from './Components/header/Header';\nimport Panigation from './Components/pagination/Pagination';\nimport ReactPaginate from 'react-paginate';\nimport ThemeBtn from './Components/Theme-Btn';\nimport { ThemeContext } from \"./Context/Theme-Provider\";\nimport {  produce } from 'immer';\n\nimport { useMemo, useState } from \"react\";\n\nconst isNotCheckAll = (todos = []) => todos.find(todo => !todo.isCheck)\n\nexport const filterBystatus = (todos = [], status='', id='') => {\n  switch (status){\n       case 'ACTIVE' : return todos.filter(todo => !todo.isCheck)\n       case 'COMPLETED' : return todos.filter(todo => todo.isCheck)\n       case 'REMOVE': return todos.filter(todo => todo.id !=id)\n       default : return todos\n  }\n}\n\nconst App = () => {\n  const [state, setState] = useState({\n    todoList: [{\n      id: 1,\n      name: 'todo1',\n      isCheck: true\n    }, {\n      id: 2,\n      name: 'todo2',\n      isCheck: false\n    }],\n    isCheckAll: false,\n    status: 'ALL'\n  });\n  const [todoList, setTodoList ] = useState([]);\n  const [isCheckAll, setIscheckAll ] = useState(false);\n  const [status, setStatus ] = useState('ALL');\n  // const [currentPage, setCurrentPage ] = useState(1);\n  // const recordsPerPage= 5 ;\n  // const npage = Math.ceil(todoList.length / recordsPerPage)\n  // const numbers = [...Array(npage+1).keys()].slice(1)\n  \n  const headerRef = useRef();\n  const pageRef = useRef();\n  \n  \n\n  const componentWillMount = () => {\n      setIscheckAll(!isNotCheckAll(todoList) )\n  }\n\n  const addTodo = (todo = {} ) => {  \n     setTodoList((preState) => \n      produce(preState,(newState) => {\n         newState.push(todo);\n      })\n     )\n  }\n  \n  const getTodoEditId = (id) => {\n      const todo = todoList.find(todo => id === todo.id);\n      const name = todo.name;\n      headerRef.current.updateState(id,name);\n  }\n\n  const onEditTodo= (todo = {}, id =-1) => {\n    if(id >=0) {\n      const updatedList =todoList.map(item => item.id===id ? ({...item, name: todo.name}) : item)\n      \n     // console.log(todo)\n      //console.log(updatedList.map(item => item))\n      setTodoList(updatedList);\n    }\n  }\n\n  const markCompleted = (id = '') => {\n    const updatedList = todoList.map(todo =>  todo.id ===id ? ({...todo, isCheck: !todo.isCheck}) : todo )\n    setTodoList(updatedList);\n    setIscheckAll(!isNotCheckAll(updatedList) )\n  }\n\n  const checkAllTodo = () => {\n      const updatedList = todoList.map(todo => ({...todo ,isCheck:!isCheckAll})); \n      setTodoList(updatedList)\n      setIscheckAll(!isCheckAll)\n  }\n\n  const setStatusFilter = (status ='') =>{\n    setStatus(status);\n  }\n\n  const clearCompleted = () => {\n    setTodoList(filterBystatus(todoList,'ACTIVE'))\n  }\n  const removeTodo = ( id ='') => {\n    setTodoList(filterBystatus(todoList,'REMOVE',id))\n  }\n\n//   const prePage = () => {\n//     if (currentPage !== 1) setCurrentPage(currentPage - 1);\n//   }\n//   const nextPage = () => {\n//     const npage = Math.ceil(todoList.length / recordsPerPage)\n//     if (currentPage !== npage) setCurrentPage(currentPage + 1);\n//   }\n \n//   const changePage = (id) => {\n//     setCurrentPage(id);\n//  }\n\n  return (\n       \n      <div className=\"todoapp\">\n        <ThemeBtn/>\n         <Header  \n             ref={headerRef}\n             addTodo = {addTodo} \n             onEditTodo ={onEditTodo}\n             isCheckAll ={isCheckAll}\n          />\n         <TodoList \n             todoList={filterBystatus(todoList,status)}\n            //currentPage={currentPage}\n             getTodoEditId = {getTodoEditId}\n             onEditTodo = {onEditTodo}\n             markCompleted ={markCompleted}\n             isCheckAll ={isCheckAll}\n             checkAllTodo={checkAllTodo}\n             removeTodo = {removeTodo}\n           \n          /> \n         <Footer\n            setStatusFilter={setStatusFilter}\n            status={status}\n            clearCompleted = {clearCompleted}\n            numOfTodoLeft = {filterBystatus(todoList,'ACTIVE').length}\n         />\n         {/* <Panigation \n             ref={pageRef}\n             prePage = {prePage}\n             nextPage = {nextPage}\n             changePage = {changePage}\n             numbers = {numbers}\n         />    */}\n      </div>\n    )\n }\n\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}